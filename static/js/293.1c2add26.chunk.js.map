{"version":3,"file":"static/js/293.1c2add26.chunk.js","mappings":"oNACA,EAAoC,sCAApC,EAAiF,yBAAjF,EAAkH,0BAAlH,EAAyJ,+BAAzJ,EAA+L,yBAA/L,EAAiO,2B,SCKjOA,EAAAA,GAAAA,IAAYC,EAAAA,IAAcC,EAAAA,KAE1B,IAgBMC,EAAgB,SAACC,EAAaC,EAAUC,GAC5C,IAAMC,EAAcC,MAAMC,KAAK,CAACC,OAAQL,IAAW,SAACM,EAAGC,GAAC,OAAKA,EAAI,CAAC,IAClE,OACE,wBACGL,EAAYM,KAAI,SAAAC,GACf,OAAe,IAAXA,GACCA,IAAWV,EAAc,GACzBU,IAAWV,EAAc,GACzBU,IAAWV,GACXU,IAAWV,EAAc,GACzBU,IAAWV,EAAc,GACzBU,IAAWT,GAEZ,eACIU,UAAWD,IAAWV,EAAcY,EAAgB,GACpDC,QAAS,kBAAMX,EAAWQ,EAAO,EAAC,SACnCA,GAHMA,GAMFA,IAAWV,EAAc,GAAKU,IAAWV,EAAc,GACzD,eAAiBW,UAAWC,EAAY,SAAC,OAAhCF,GAET,IAEX,KAGN,EAEA,EA7CmB,SAAH,OAAKV,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAUa,EAAc,EAAdA,eAAgBC,EAAU,EAAVA,WAAYb,EAAU,EAAVA,WAAU,OAChF,iBAAKS,UAAWC,EAAyB,WACvC,iBAAKD,UAAWC,EAAY,WAC1B,SAACI,EAAA,EAAM,CAACC,SAA0B,IAAhBjB,EAAmBa,QAASC,EAAe,SAAC,cAC9D,SAAC,IAAe,CAACI,KAAK,+BAExB,gBAAKP,UAAWC,EAAkB,SAC/Bb,EAAcC,EAAaC,EAAUC,MAExC,iBAAKS,UAAWC,EAAa,WAC3B,SAACI,EAAA,EAAM,CAACC,SAAUjB,IAAgBC,GAAyB,IAAbA,EAAgBY,QAASE,EAAW,SAAC,UACnF,SAAC,IAAe,CAACG,KAAK,iCAEpB,C,4FCpBR,EAA8B,iCAA9B,EAA4E,gCAA5E,EAA8H,qCAA9H,EAA4K,4BAA5K,EAA+M,0BAA/M,EAA4P,sC,SCyB5P,EAvBoB,SAACC,GAAI,OACvB,qBAASR,UAAWC,EAAmB,WACrC,+BACE,gBAAKQ,IAAKD,EAAKE,IAAID,IAAKE,IAAKH,EAAKE,IAAIC,OACtC,iBAAKX,UAAWC,EAAkB,WAChC,iBAAKD,UAAWC,EAAuB,WACrC,cAAGD,UAAWC,EAAc,SAAEO,EAAKI,OAAOC,QAC1C,cAAGb,UAAWC,EAAY,SAAEa,EAAWN,EAAKO,YAE9C,gBAAKf,UAAWC,EAAwB,UACtC,uBAAIO,EAAKQ,oBAIf,6BACE,wBAAKR,EAAKS,SACV,uBAAIT,EAAKU,QAET,SAAC,KAAI,CAACC,GAAE,iBAAYX,EAAKY,IAAK,SAAC,mBAEzB,EAKL,SAASN,EAAWO,GACzB,IAcMN,EAAO,IAAIO,KAAKD,GAChBE,EAAMR,EAAKS,UACXC,EAhBS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAImBV,EAAKW,YACpBC,EAAOZ,EAAKa,cAClB,MAAM,GAAN,OAAUL,EAAG,YAAIE,EAAK,YAAIE,EAC5B,C","sources":["webpack://ekreative-frontend-task4/./src/common/components/other/Pagination/Pagination.module.scss?8197","common/components/other/Pagination/Pagination.jsx","webpack://ekreative-frontend-task4/./src/common/components/other/PostPreview/PostPreview.module.scss?b8b9","common/components/other/PostPreview/PostPreview.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginationWrapper\":\"Pagination_paginationWrapper__l3OrJ\",\"left\":\"Pagination_left__jS1Kz\",\"right\":\"Pagination_right__J4A4f\",\"pagination\":\"Pagination_pagination__9qOFR\",\"dots\":\"Pagination_dots__2asq8\",\"active\":\"Pagination_active__4-pGr\"};","import {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faAngleLeft, faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport Button from \"../../form/Button/Button\";\r\nimport styles from \"./Pagination.module.scss\";\r\n\r\nlibrary.add(faAngleRight, faAngleLeft);\r\n\r\nconst Pagination = ({currentPage, lastPage, handlePrevious, handleNext, handlePage}) => (\r\n  <div className={styles.paginationWrapper}>\r\n    <div className={styles.left}>\r\n      <Button disabled={currentPage === 1} onClick={handlePrevious}>Previous</Button>\r\n      <FontAwesomeIcon icon=\"fa-solid fa-angle-left\"/>\r\n    </div>\r\n    <div className={styles.pagination}>\r\n      {getPagination(currentPage, lastPage, handlePage)}\r\n    </div>\r\n    <div className={styles.right}>\r\n      <Button disabled={currentPage === lastPage || lastPage === 0} onClick={handleNext}>Next</Button>\r\n      <FontAwesomeIcon icon=\"fa-solid fa-angle-right\"/>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst getPagination = (currentPage, lastPage, handlePage) => {\r\n  const pageNumbers = Array.from({length: lastPage}, (_, i) => i + 1);\r\n  return (\r\n    <ul>\r\n      {pageNumbers.map(number => {\r\n        if (number === 1\r\n          || number === currentPage - 2\r\n          || number === currentPage - 1\r\n          || number === currentPage\r\n          || number === currentPage + 1\r\n          || number === currentPage + 2\r\n          || number === lastPage) {\r\n          return (\r\n            <li key={number}\r\n                className={number === currentPage ? styles.active : \"\"}\r\n                onClick={() => handlePage(number)}>\r\n              {number}\r\n            </li>\r\n          );\r\n        } else if (number === currentPage - 3 || number === currentPage + 3) {\r\n          return <li key={number} className={styles.dots}>...</li>;\r\n        } else {\r\n          return null;\r\n        }\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"postPreview\":\"PostPreview_postPreview__xjRdC\",\"img_bottom\":\"PostPreview_img_bottom__BqqMN\",\"img_bottom_left\":\"PostPreview_img_bottom_left__5GyNF\",\"author\":\"PostPreview_author__XQVDw\",\"date\":\"PostPreview_date__XqDxD\",\"img_bottom_right\":\"PostPreview_img_bottom_right__2SxJb\"};","import {Link} from \"react-router-dom\";\r\nimport styles from \"./PostPreview.module.scss\";\r\n\r\nconst PostPreview = (post) => (\r\n  <article className={styles.postPreview}>\r\n    <header>\r\n      <img src={post.img.src} alt={post.img.alt}/>\r\n      <div className={styles.img_bottom}>\r\n        <div className={styles.img_bottom_left}>\r\n          <p className={styles.author}>{post.author.name}</p>\r\n          <p className={styles.date}>{formatDate(post.date)}</p>\r\n        </div>\r\n        <div className={styles.img_bottom_right}>\r\n          <p>{post.category}</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <main>\r\n      <h3>{post.title}</h3>\r\n      <p>{post.desc}</p>\r\n\r\n      <Link to={`/posts/${post.id}`}>Read more</Link>\r\n    </main>\r\n  </article>\r\n);\r\n\r\nexport default PostPreview;\r\n\r\nexport function formatDate(millis) {\r\n  const months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ];\r\n  const date = new Date(millis);\r\n  const day = date.getDate();\r\n  const month = months[date.getMonth()];\r\n  const year = date.getFullYear();\r\n  return `${day} ${month} ${year}`;\r\n}"],"names":["library","faAngleRight","faAngleLeft","getPagination","currentPage","lastPage","handlePage","pageNumbers","Array","from","length","_","i","map","number","className","styles","onClick","handlePrevious","handleNext","Button","disabled","icon","post","src","img","alt","author","name","formatDate","date","category","title","desc","to","id","millis","Date","day","getDate","month","getMonth","year","getFullYear"],"sourceRoot":""}